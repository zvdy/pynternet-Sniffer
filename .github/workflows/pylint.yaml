name: Pylint

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint anybadge

      - name: Analysing the code with pylint
        run: |
          pylint $(git ls-files '*.py') > pylint_output.txt || true

      - name: Print pylint_output.txt
        run: |
          cat pylint_output.txt

      - name: Generate pylint badge
        run: |
          score=$(grep 'Your code has been rated at' pylint_output.txt | awk '{print $7}' | cut -d'/' -f1)
          anybadge -l pylint -v $score -f pylint.svg 2=red 4=orange 8=yellow 10=green

      - name: Update README with badge
        run: |
          if grep -q "![pylint](pylint.svg)" README.md; then
            sed -i 's|!\[pylint\](pylint.svg)|![pylint](pylint.svg)|' README.md
          else
            echo '![pylint](pylint.svg)' >> README.md
          fi
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md pylint.svg
          git commit -m "Update README with pylint badge"
          git push

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: pylint_output.txt
          path: pylint_output.txt